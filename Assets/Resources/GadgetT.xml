<?xml version="1.0" encoding="UTF-8"?>
<Module>
    <ModulePrefs title="College Fuck Fest" author="example" thumbnail="" screenshot="" height="800" width="1280">
        <Require feature="opensocial-0.8" />
        <Require feature="opensocial-payment" />
        <Require feature="nutaku" />
        <Link rel="payment.handler" href="https://example.com/your-app/payment-handler" />
        <Require feature="dynamic-height" />
    </ModulePrefs>
    <Content preferred_width="1280" type="html" view="canvas">

    <![CDATA[
        <link rel="stylesheet" href="https://college-fuck-fest.nyc3.cdn.digitaloceanspaces.com/CFF/TemplateData/style.css">
        <script src="https://college-fuck-fest.nyc3.cdn.digitaloceanspaces.com/CFF/Build/WebGL.framework.js"></script>
        <script src="https://college-fuck-fest.nyc3.cdn.digitaloceanspaces.com/CFF/Build/WebGL.loader.js"></script>
        <script src="https://college-fuck-fest.nyc3.cdn.digitaloceanspaces.com/CFF/NutakuClient.js"></script>

        <div id="unity-container" class="unity-desktop">
            <canvas id="unity-canvas" width="1280" height="720"></canvas>

          <div id="unity-loading-bar" style="display: none;">
            <div id="unity-logo"></div>
            <div id="unity-progress-bar-empty">
                <div id="unity-progress-bar-full" style="width: 100%;"></div>
            </div>
          </div>

          <div id="unity-warning"></div>

          <div id="unity-footer">
            <div id="unity-fullscreen-button"></div>
          </div>
       </div>

        <script type="text/javascript">
              var gameInstance;

              var container = document.querySelector("#unity-container");
              var canvas = document.querySelector("#unity-canvas");
              var loadingBar = document.querySelector("#unity-loading-bar");
              var progressBarFull = document.querySelector("#unity-progress-bar-full");
              var fullscreenButton = document.querySelector("#unity-fullscreen-button");
              var warningBanner = document.querySelector("#unity-warning");

              function unityShowBanner(msg, type) {
                function updateBannerVisibility() {
                  warningBanner.style.display = warningBanner.children.length ? 'block' : 'none';
                }
                var div = document.createElement('div');
                div.innerHTML = msg;
                warningBanner.appendChild(div);
                if (type == 'error') div.style = 'background: red; padding: 10px;';
                else {
                  if (type == 'warning') div.style = 'background: yellow; padding: 10px;';
                  setTimeout(function() {
                    warningBanner.removeChild(div);
                    updateBannerVisibility();
                  }, 5000);
                }
                updateBannerVisibility();
              }

              var loaderUrl = "https://college-fuck-fest.nyc3.cdn.digitaloceanspaces.com/CFF/Build/WebGL.loader.js";

              const config = {
                dataUrl: "https://college-fuck-fest.nyc3.cdn.digitaloceanspaces.com/CFF/Build/WebGL.data",
                frameworkUrl: "https://college-fuck-fest.nyc3.cdn.digitaloceanspaces.com/CFF/Build/WebGL.framework.js",
                codeUrl: "https://college-fuck-fest.nyc3.cdn.digitaloceanspaces.com/CFF/Build/WebGL.wasm",
                streamingAssetsUrl: "https://www.example.com/Builds/release/StreamingAssets",
                companyName: "Ghezzi Games",
                productName: "College Fuck Fest",
                productVersion: "0.1",
                showBanner: unityShowBanner,
              };

        if (/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)) {
        // Mobile device style: fill the whole browser client area with the game canvas:

        var meta = document.createElement('meta');
        meta.name = 'viewport';
        meta.content = 'width=device-width, height=device-height, initial-scale=1.0, user-scalable=no, shrink-to-fit=yes';
        document.getElementsByTagName('head')[0].appendChild(meta);
        container.className = "unity-mobile";
        canvas.className = "unity-mobile";
        canvas.style.width = "10px";
        canvas.style.height = "100px";
        console.log("FOUND SP DEVICE");

        // To lower canvas resolution on mobile devices to gain some
        // performance, uncomment the following line:
        config.devicePixelRatio = 1;


      } else {
        // Desktop style: Render the game canvas in a window that can be maximized to fullscreen:

        canvas.style.width = "1280px";
        canvas.style.height = "720px";
      }

      <!-- loadingBar.style.display = "block"; -->

      var script = document.createElement("script");
      script.src = loaderUrl;
      
 
            var canvas;

            function retrieveUser() 
                {
                    Nutaku.retrieveUser(function(resultData) 
                    {
                        this.gameInstance = gameInstance;
                        console.log(gameInstance + "found in GADGET")
                        gameInstance.SendMessage("_SG_NutakuManager", "OnUserRetrieved", JSON.stringify(resultData));
                        
                        var grade = resultData["grade"];
                        
                        if (grade != 0)
                        {
                            console.log("THIS USER HAS AN ACCOUNT");
                        }
                        else 
                        {
                            console.log("NO ACCOUNT");
                        }
                    });
                }

                function onPaymentFinished(result) 
                {
                  console.log(result);
                  gameInstance.SendMessage("PlayFab_Manager", "OnPaymentFinished", JSON.stringify(result));
                }

                function requestPayment(paymentData) 
                {
                  Nutaku.requestPayment(paymentData, function(resultData) 
                  {
                    console.log(resultData);
                    var result = {};
                    result.responseCode = resultData == null ? "failed" : resultData["payment"].getField("responseCode");
                    gameInstance.SendMessage("_SG_NutakuManager", "OnPaymentFinished", JSON.stringify(result));
                  });
                }

                function sendRequestToAPI(userId) {
                    console.log("Begun sending request to API in GADGET by func");
                    var params = {};
                    params[gadgets.io.RequestParameters.METHOD] = gadgets.io.MethodType.POST;
                    params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
                    params[gadgets.io.RequestParameters.POST_DATA] = gadgets.io.encodeValues({});
                    params[gadgets.io.RequestParameters.AUTHORIZATION] = gadgets.io.AuthorizationType.SIGNED;
                    console.log("PARAMS SIGNED, should be makeRequest...");

                    var apiUrl = "https://fuckfest.college/scripts/authenticate.php?id=" + userId;

                    gadgets.io.makeRequest(apiUrl, function(obj) {
                        

                    console.log("FOUND AUTH DATA:", obj);
                    gameInstance.SendMessage("Save_Handler", "OnAuthenticate", JSON.stringify(obj.data));
                    }, params);
                }
             
            function init() {
                canvas = document.querySelector("#unity-canvas"); //or getElementById('unity-canvas')
                var gameInstanceInit = createUnityInstance(canvas, config, (progress) => {
                  console.log(progress);
                  }).then((gameInstanceInit) => {
                    console.log("WAS LOADED");
                    fullscreenButton.onclick = () => { gameInstanceInit.SetFullscreen(1) };
                    Nutaku.retrieveUser(function(resultData) 
                    {
                        var grade = resultData["grade"];
                        
                        if (grade != 0)
                        {
                            console.log("THIS USER HAS AN ACCOUNT");
                        }
                        else 
                        {
                            console.log("NO ACCOUNT");
                        }

                        if (window.location.protocol == "https:" || window.location.protocol == "http:" && window.location.pathname == "/scripts/authenticate.php") {
                          sendRequestToAPI(resultData.id);
                      } else {
                          console.error("Invalid request method or path.");
                      }

                        console.log("FOUND USER ID: " + resultData.id);
                        gameInstanceInit.SendMessage("_SG_NutakuManager", "OnUserRetrieved", JSON.stringify(resultData));
                        gameInstance = gameInstanceInit;
                    });
                  }).catch((message) => {
                    alert(message);
                  });
            }


      document.body.appendChild(script);
 
            gadgets.util.registerOnLoadHandler(init);
            console.log("RegisterLoadHandler completed!");
            gadgets.window.adjustHeight(768);
        </script>
    ]]>
    </Content>
</Module>